/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.saburi.smartcoder;

/**
 *
 * @author CLINICMASTER13
 */
public class JavaClass {

    protected String packageName;
    protected String name;
    protected String imports;
    protected String variables;
    protected String contructors;
    protected String properties;
    protected String methods;

    public JavaClass(String name) {
        this.name = name;
    }

    public JavaClass(String packageName, String name, String imports, String variables, String contructors, String properties, String methods) {
        this.packageName = packageName;
        this.name = name;
        this.imports = imports;
        this.variables = variables;
        this.contructors = contructors;
        this.properties = properties;
        this.methods = methods;
    }

    public String makeNoArgConstructor() {
        return "public " + this.name + "(){\n}";
    }

    public String makeClass() {
        return "/*\n Sam Buriima\n"
                + "generated by Saburi Tools\n"
                + "*/\n"
                + "package " + packageName + ";\n\n"
                + this.imports + "\n\n"
                + "public class " + this.name + "{\n\n"
                + this.variables + "\n"
                + this.contructors + "\n"
                + this.properties + "\n"
                + this.methods + "\n\n"
                + "}";
    }

    public String makeClass(String superClass) {
        return "/*\n Sam Buriima\n"
                + "generated by Saburi Tools\n"
                + "*/\n"
                + "package " + packageName + ";\n\n"
                + this.imports + "\n\n"
                + "public class " + this.name + "  extends " + superClass + "{\n\n"
                + this.variables + "\n"
                + this.contructors + "\n"
                + this.properties + "\n"
                + this.methods + "\n\n"
                + "}";
    }

    public String makeClassImp(String _Interface) {
        return "/*\n Sam Buriima\n"
                + "generated by Saburi Tools\n"
                + "*/\n"
                + "package " + packageName + ";\n\n"
                + this.imports + "\n\n"
                + "public class " + this.name + "  implements " + _Interface + "{\n\n"
                + this.variables + "\n"
                + this.contructors + "\n"
                + this.properties + "\n"
                + this.methods + "\n\n"
                + "}";
    }

    public String makeClass(String superClass, String annotation) {
        return "/*\n Sam Buriima\n"
                + "generated by Saburi Tools\n"
                + "*/\n"
                + "package " + packageName + ";\n\n"
                + this.imports + "\n\n"
                + annotation + "\n"
                + "public class " + this.name + " extends " + superClass + "{\n\n"
                + this.variables + "\n"
                + this.contructors + "\n"
                + this.properties + "\n"
                + this.methods + "\n\n"
                + "}";
    }

    public String makeClassImp(String _Interface, String annotation) {
        return "/*\n Sam Buriima\n"
                + "generated by Saburi Tools\n"
                + "*/\n"
                + "package " + packageName + ";\n\n"
                + this.imports + "\n\n"
                + annotation + "\n"
                + "public class " + this.name + " implements " + _Interface + "{\n\n"
                + this.variables + "\n"
                + this.contructors + "\n"
                + this.properties + "\n"
                + this.methods + "\n\n"
                + "}";
    }

}
